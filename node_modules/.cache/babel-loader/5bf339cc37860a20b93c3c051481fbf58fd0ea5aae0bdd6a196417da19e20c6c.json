{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport todosReducer from '../features/todosSlice';\nimport authReducer from '../features/authSlice';\n\n// Load state from localStorage\nconst loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('todoAppState');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\n// Save state to localStorage\nconst saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('todoAppState', serializedState);\n  } catch (err) {\n    // Ignore write errors\n  }\n};\nconst preloadedState = loadState();\nexport const store = configureStore({\n  reducer: {\n    todos: todosReducer,\n    auth: authReducer\n  },\n  preloadedState\n});\n\n// Subscribe to store changes and save to localStorage\nstore.subscribe(() => {\n  saveState(store.getState());\n});","map":{"version":3,"names":["configureStore","todosReducer","authReducer","loadState","serializedState","localStorage","getItem","undefined","JSON","parse","err","saveState","state","stringify","setItem","preloadedState","store","reducer","todos","auth","subscribe","getState"],"sources":["/Users/shreyatalekar/PRojectReact/src/store/index.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport todosReducer from '../features/todosSlice';\nimport authReducer from '../features/authSlice';\n\n// Load state from localStorage\nconst loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('todoAppState');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\n// Save state to localStorage\nconst saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('todoAppState', serializedState);\n  } catch (err) {\n    // Ignore write errors\n  }\n};\n\nconst preloadedState = loadState();\n\nexport const store = configureStore({\n  reducer: {\n    todos: todosReducer,\n    auth: authReducer,\n  },\n  preloadedState,\n});\n\n// Subscribe to store changes and save to localStorage\nstore.subscribe(() => {\n  saveState(store.getState());\n}); "],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,YAAY,MAAM,wBAAwB;AACjD,OAAOC,WAAW,MAAM,uBAAuB;;AAE/C;AACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,IAAI;IACF,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAC5D,IAAIF,eAAe,KAAK,IAAI,EAAE;MAC5B,OAAOG,SAAS;IAClB;IACA,OAAOC,IAAI,CAACC,KAAK,CAACL,eAAe,CAAC;EACpC,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZ,OAAOH,SAAS;EAClB;AACF,CAAC;;AAED;AACA,MAAMI,SAAS,GAAIC,KAAK,IAAK;EAC3B,IAAI;IACF,MAAMR,eAAe,GAAGI,IAAI,CAACK,SAAS,CAACD,KAAK,CAAC;IAC7CP,YAAY,CAACS,OAAO,CAAC,cAAc,EAAEV,eAAe,CAAC;EACvD,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZ;EAAA;AAEJ,CAAC;AAED,MAAMK,cAAc,GAAGZ,SAAS,CAAC,CAAC;AAElC,OAAO,MAAMa,KAAK,GAAGhB,cAAc,CAAC;EAClCiB,OAAO,EAAE;IACPC,KAAK,EAAEjB,YAAY;IACnBkB,IAAI,EAAEjB;EACR,CAAC;EACDa;AACF,CAAC,CAAC;;AAEF;AACAC,KAAK,CAACI,SAAS,CAAC,MAAM;EACpBT,SAAS,CAACK,KAAK,CAACK,QAAQ,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}