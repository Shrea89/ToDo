{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  todos: [],\n  selectedTodo: null,\n  currentView: 'today',\n  // 'all', 'today', 'important', 'planned', 'assigned'\n  loading: false,\n  error: null\n};\nconst todosSlice = createSlice({\n  name: 'todos',\n  initialState,\n  reducers: {\n    setCurrentView: (state, action) => {\n      state.currentView = action.payload;\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    },\n    addTodo: (state, action) => {\n      state.todos.unshift(action.payload);\n    },\n    removeTodo: (state, action) => {\n      var _state$selectedTodo;\n      state.todos = state.todos.filter(todo => todo.id !== action.payload);\n      if (((_state$selectedTodo = state.selectedTodo) === null || _state$selectedTodo === void 0 ? void 0 : _state$selectedTodo.id) === action.payload) {\n        state.selectedTodo = null;\n      }\n    },\n    toggleTodo: (state, action) => {\n      const todo = state.todos.find(todo => todo.id === action.payload);\n      if (todo) {\n        todo.completed = !todo.completed;\n      }\n    },\n    updateTodoPriority: (state, action) => {\n      const todo = state.todos.find(todo => todo.id === action.payload.id);\n      if (todo) {\n        todo.priority = action.payload.priority;\n      }\n    },\n    selectTodo: (state, action) => {\n      state.selectedTodo = state.todos.find(todo => todo.id === action.payload) || null;\n    },\n    updateTodoNotes: (state, action) => {\n      const todo = state.todos.find(todo => todo.id === action.payload.id);\n      if (todo) {\n        todo.notes = action.payload.notes;\n      }\n    },\n    addTodoStep: (state, action) => {\n      const todo = state.todos.find(todo => todo.id === action.payload.todoId);\n      if (todo) {\n        if (!todo.steps) todo.steps = [];\n        todo.steps.push({\n          id: action.payload.stepId,\n          title: action.payload.title,\n          completed: false\n        });\n      }\n    },\n    toggleTodoStep: (state, action) => {\n      const todo = state.todos.find(todo => todo.id === action.payload.todoId);\n      if (todo && todo.steps) {\n        const step = todo.steps.find(step => step.id === action.payload.stepId);\n        if (step) {\n          step.completed = !step.completed;\n        }\n      }\n    },\n    setTodoReminder: (state, action) => {\n      const todo = state.todos.find(todo => todo.id === action.payload.id);\n      if (todo) {\n        todo.reminder = action.payload.reminder;\n      }\n    },\n    setTodoDueDate: (state, action) => {\n      const todo = state.todos.find(todo => todo.id === action.payload.id);\n      if (todo) {\n        todo.dueDate = action.payload.dueDate;\n      }\n    },\n    setTodoRepeat: (state, action) => {\n      const todo = state.todos.find(todo => todo.id === action.payload.id);\n      if (todo) {\n        todo.repeat = action.payload.repeat;\n      }\n    },\n    assignTodo: (state, action) => {\n      const todo = state.todos.find(todo => todo.id === action.payload.todoId);\n      if (todo) {\n        todo.assignedTo = action.payload.userId;\n      }\n    },\n    updateTodoStatus: (state, action) => {\n      const todo = state.todos.find(todo => todo.id === action.payload.id);\n      if (todo) {\n        todo.status = action.payload.status; // 'todo', 'in-progress', 'done'\n      }\n    }\n  }\n});\nexport const {\n  setCurrentView,\n  setLoading,\n  setError,\n  addTodo,\n  removeTodo,\n  toggleTodo,\n  updateTodoPriority,\n  selectTodo,\n  updateTodoNotes,\n  addTodoStep,\n  toggleTodoStep,\n  setTodoReminder,\n  setTodoDueDate,\n  setTodoRepeat,\n  assignTodo,\n  updateTodoStatus\n} = todosSlice.actions;\nexport default todosSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","todos","selectedTodo","currentView","loading","error","todosSlice","name","reducers","setCurrentView","state","action","payload","setLoading","setError","addTodo","unshift","removeTodo","_state$selectedTodo","filter","todo","id","toggleTodo","find","completed","updateTodoPriority","priority","selectTodo","updateTodoNotes","notes","addTodoStep","todoId","steps","push","stepId","title","toggleTodoStep","step","setTodoReminder","reminder","setTodoDueDate","dueDate","setTodoRepeat","repeat","assignTodo","assignedTo","userId","updateTodoStatus","status","actions","reducer"],"sources":["/Users/shreyatalekar/PRojectReact/src/features/todosSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  todos: [],\n  selectedTodo: null,\n  currentView: 'today', // 'all', 'today', 'important', 'planned', 'assigned'\n  loading: false,\n  error: null,\n};\n\nconst todosSlice = createSlice({\n  name: 'todos',\n  initialState,\n  reducers: {\n    setCurrentView: (state, action) => {\n      state.currentView = action.payload;\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    },\n    addTodo: (state, action) => {\n      state.todos.unshift(action.payload);\n    },\n    removeTodo: (state, action) => {\n      state.todos = state.todos.filter(todo => todo.id !== action.payload);\n      if (state.selectedTodo?.id === action.payload) {\n        state.selectedTodo = null;\n      }\n    },\n    toggleTodo: (state, action) => {\n      const todo = state.todos.find(todo => todo.id === action.payload);\n      if (todo) {\n        todo.completed = !todo.completed;\n      }\n    },\n    updateTodoPriority: (state, action) => {\n      const todo = state.todos.find(todo => todo.id === action.payload.id);\n      if (todo) {\n        todo.priority = action.payload.priority;\n      }\n    },\n    selectTodo: (state, action) => {\n      state.selectedTodo = state.todos.find(todo => todo.id === action.payload) || null;\n    },\n    updateTodoNotes: (state, action) => {\n      const todo = state.todos.find(todo => todo.id === action.payload.id);\n      if (todo) {\n        todo.notes = action.payload.notes;\n      }\n    },\n    addTodoStep: (state, action) => {\n      const todo = state.todos.find(todo => todo.id === action.payload.todoId);\n      if (todo) {\n        if (!todo.steps) todo.steps = [];\n        todo.steps.push({\n          id: action.payload.stepId,\n          title: action.payload.title,\n          completed: false,\n        });\n      }\n    },\n    toggleTodoStep: (state, action) => {\n      const todo = state.todos.find(todo => todo.id === action.payload.todoId);\n      if (todo && todo.steps) {\n        const step = todo.steps.find(step => step.id === action.payload.stepId);\n        if (step) {\n          step.completed = !step.completed;\n        }\n      }\n    },\n    setTodoReminder: (state, action) => {\n      const todo = state.todos.find(todo => todo.id === action.payload.id);\n      if (todo) {\n        todo.reminder = action.payload.reminder;\n      }\n    },\n    setTodoDueDate: (state, action) => {\n      const todo = state.todos.find(todo => todo.id === action.payload.id);\n      if (todo) {\n        todo.dueDate = action.payload.dueDate;\n      }\n    },\n    setTodoRepeat: (state, action) => {\n      const todo = state.todos.find(todo => todo.id === action.payload.id);\n      if (todo) {\n        todo.repeat = action.payload.repeat;\n      }\n    },\n    assignTodo: (state, action) => {\n      const todo = state.todos.find(todo => todo.id === action.payload.todoId);\n      if (todo) {\n        todo.assignedTo = action.payload.userId;\n      }\n    },\n    updateTodoStatus: (state, action) => {\n      const todo = state.todos.find(todo => todo.id === action.payload.id);\n      if (todo) {\n        todo.status = action.payload.status; // 'todo', 'in-progress', 'done'\n      }\n    },\n  },\n});\n\nexport const {\n  setCurrentView,\n  setLoading,\n  setError,\n  addTodo,\n  removeTodo,\n  toggleTodo,\n  updateTodoPriority,\n  selectTodo,\n  updateTodoNotes,\n  addTodoStep,\n  toggleTodoStep,\n  setTodoReminder,\n  setTodoDueDate,\n  setTodoRepeat,\n  assignTodo,\n  updateTodoStatus,\n} = todosSlice.actions;\n\nexport default todosSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}